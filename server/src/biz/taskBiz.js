// Generated by CoffeeScript 1.12.4
(function() {
  var addTask, db, deleteTask, findTaskById, findTaskList, jwt, updateTask;

  db = require('./../../dist/libs/db');

  jwt = require('jsonwebtoken');

  addTask = function(req, res, next) {
    var body, token;
    console.log('Add Task');
    body = req.body;
    token = req.headers['x-token'];
    db.users.findOne({
      token: token
    }, function(err, user) {
      var data;
      if (err) {
        return next(err);
      }
      if (!user) {
        return next(new Error('未授权'));
      }
      data = {
        description: body.description,
        createDate: Date.now(),
        updateDate: Date.now(),
        status: "InProgress",
        deleted: false,
        creator: user._id
      };
      return db.tasks.insert(data, function(err, task) {
        if (err) {
          return next(err);
        }
        if (!task) {
          return next(new Error('创建任务失败'));
        }
        res.json(task);
      });
    });
  };

  updateTask = function(req, res, next) {
    var body;
    console.log('编辑任务');
    body = req.body;
    return db.tasks.findOne({
      _id: body._id
    }, function(err, task) {
      if (err) {
        return next(err);
      }
      if (!task) {
        return next(new Error('未找到要跟新的任务'));
      }
      return db.tasks.update({
        _id: task._id
      }, {
        $set: {
          description: body.description,
          updateDate: Date.now(),
          status: body.status,
          deleted: false || body.deleted
        }
      }, function(err, num) {
        if (err) {
          return next(err);
        }
        if (num === 0) {
          return next(new Error('更新失败'));
        }
        return res.json(true);
      });
    });
  };

  deleteTask = function(req, res, next) {
    var body;
    console.log('删除任务');
    body = req.body;
    return db.tasks.update({
      _id: req.params.id
    }, {
      $set: {
        deleted: false || body.deleted
      }
    }, function(err, num) {
      if (err) {
        return next(err);
      }
      if (num === 0) {
        return next(new Error('删除失败'));
      }
      return res.json(true);
    });
  };

  findTaskById = function(req, res, next) {
    var taskId;
    taskId = req.params.id;
    return db.tasks.findOne({
      _id: taskId
    }, function(err, task) {
      if (err) {
        return next(err);
      }
      if (!task) {
        return next(new Error('查询失败'));
      }
      return res.json(task);
    });
  };

  findTaskList = function(req, res, next) {
    var token;
    console.log('查任务列表');
    token = req.headers['x-token'];
    return db.users.findOne({
      token: token
    }, function(err, user) {
      if (err) {
        return next(err);
      }
      if (!user) {
        return next(new Error('未授权'));
      }
      return db.tasks.find({
        deleted: false,
        creator: user._id
      }, function(err, tasks) {
        if (err) {
          return next(err);
        }
        console.log("tasks=" + tasks);
        res.json(tasks);
      });
    });
  };

  module.exports = {
    addTask: addTask,
    updateTask: updateTask,
    deleteTask: deleteTask,
    findTaskById: findTaskById,
    findTaskList: findTaskList
  };

}).call(this);

//# sourceMappingURL=taskBiz.js.map
